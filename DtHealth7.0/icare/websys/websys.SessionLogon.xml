<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24" zv="Cache for Windows (x86-64) 2010.2.8 (Build 1104U)" ts="2014-03-11 16:42:08">
<Class name="websys.SessionLogon">
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Persistent,websys.Abstract</Super>
<TimeChanged>63245,60491.261447</TimeChanged>
<TimeCreated>61079,43958.103</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Default>46</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
</Parameter>

<Parameter name="SQLDATETO">
</Parameter>

<Parameter name="SQLCODE">
<Default>ID</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Default>ID</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Property name="LicenseKey">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="SiteCode">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="LicensedTrakCareUsers">
<Type>%Integer</Type>
</Property>

<Property name="ActiveTrakCareUsers">
<Type>%Integer</Type>
<Transient>1</Transient>
</Property>

<Property name="ExpiryDate">
<Type>%Date</Type>
</Property>

<Method name="License">
<ClassMethod>1</ClassMethod>
<FormalSpec>type:%String="TC"</FormalSpec>
</Method>

<Method name="UnLicense">
<ClassMethod>1</ClassMethod>
</Method>

<Method name="CheckLicense">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%String</ReturnType>
</Method>

<Method name="AddLicenseCount">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
</Method>

<Method name="ResetLicenseCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>resetMedTrak:%Boolean=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
</Method>

<Method name="Logon">
<Description>
zhaocz 2011-05-27 add</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	s mystatus=1
	s STATUS=""
	
	s $zt="Err"
	s LICENSE="Dt License to "
	
	;******************************************************
	;设置%Session信息
	;在表中获取医院信息
	;
	
	s welcometitle="欢迎 "
	
	;判断lisence
	s lic=1
	i ((+$g(^TMPSession("Session",+$h,"COUNT"))>2)&&('$d(^TMPSession("Session",+$h,%session.SessionId)))){
		s lic=0
	}
	
	s forcePasswordChange=0
	s readonly=""
	s locIsDisabled=1
	
	s locIsDisabled=0
	s ValidUser=1
	s logonround=1
	
	d ..InitialiseSession()

 ; Set items for Logon.
 s LogonAttempts=+$g(%session.Data("LogonAttempts"))
 s PreviousUser=$g(%session.Data("PreviousUser")) 
 s STATUS=""
 s listflag=0
 s ValidUser=0
 s logonround=0
 s roundok=1
 s overrideauth=0,readonly=""
 s tdate=+$h
 s ttime=+$p($h,",",2)
 
 s config=##Class(websys.Configuration).%OpenId(1,0)
 i config {
 	s %session.Data("LOGON.SITECODE")=config.SiteCode
 	s %session.Data("LOGON.LAYOUTMANAGER")=config.LayoutManager
 	s (%session.Data("LOGON.TIMEOUT"),%session.AppTimeout)=$s(+config.TimeOut:config.TimeOut*60,1:900) ; convert from mins to secs
 	s %session.Data("LOGON.PPMDISPLAY")=config.PerformanceStatisticsDisplay
 	s %session.Data("LOGON.PPMCAPTURE")=config.PerformanceStatisticsCapture
	s %session.Data("LOGON.LANGID")=config.LanguageApp
	if config.LanguageApp="" s %session.Data("LOGON.LANGID")=$o(^SS("LAN",0))
 	s overrideauth=config.OverrideAuthentication
 	d config.%Close()
 	s %session.Data("TITLE")=$p($g(^CF("SM",1)),"^",5)
	s NoOfAttempts=$p($g(^CF("SM",1)),"^",46)
	s %session.Data("LICSITE")=$p($g(^CF("SM",1)),"^",43)
 }
 ;KK 02/Sep/2002 Log 27149 - translate messages
 ;TN: 01-Jan-2003 moved the retrieval of translations till the end for the correct %session("LANGID") to be set
 ;d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM,SSUserLogon")
 ;i $g(%request.Data("RELOGON",1))'="" s STATUS=$g(t("SESSION_EXPIRED"),"Your session has expired. Please re-enter your username and password")
 i $g(%request.Data("RELOGON",1))'="" s STATUS="SESSION_EXPIRED"
 if ('overrideauth) {
 	s username=$g(%request.Data("USERNAME",1))
 	s password=$g(%request.Data("PASSWORD",1))
	s department=$g(%request.Data("DEPARTMENT",1))
	s round=$g(%request.Data("ROUND",1))
 } else {
	; in this case always use this and never use the value from request.Data
 	s username=%request.GetCgiEnv("REMOTE_USER")
 	; get the username part only in case if is prefixed with domain
 	s username=$p(username,"\",$l(username,"\"))
 	s password="*****"
 	s department=""
	s round=""
 	s readonly="READONLY"
 }
 //Remove any old error messages
 d ##Class(websys.Message).%DeleteId(%session.SessionId)
 //Remove any (and all) existing session data

 //clear records against this computer
 ;d ##Class(websys.Lock).LockClearComputer($zu(67,15,$j))
 s Computer=%session.Data("REMOTE_ADDR")
 d ##Class(websys.Lock).LockClearComputer(Computer)

 //k ^websys.LockD,^websys.LockI
 ;
 s (locIsDisabled,forcePasswordChange,blankDefaultLoc)=0	;TN: added for refresh purposes
 if $g(username)'="",$g(password)'="" {
	; Return -ve rowid if valid user but not active !
	if ('overrideauth) {
		s userid=##Class(web.SSUser).IsValidUser(username,password)
	} else {
		s userid=##Class(web.SSUser).IsValidUser(username,password,1)
	}
	i userid>0 s ValidUser=1
	; zhaocz  2011-06-02 修正 密码错误提示
	;i +userid<0 s userid=##Class(web.SSUser).GetIdFromCodeOrDescription(username)
	; Check if user is active, if not show message and QUIT
	;TN: 01-Jan-2003: do not quit yet, move to end to retrieve tranlated messages
	i userid<0 {
		;s STATUS=$g(t("INACTIVE_LOGON"),"Your Login is Flagged 'Inactive'. Please see your System Administrator")
		s STATUS="INACTIVE_LOGON"
		if userid=-101{
			S STATUS = "USERPWDERROR_LOGON"		;SSUserLogon
		}
		;q 1
	}
	;; zhaocz 同一个用户 多次登陆(3次)而 密码不对的情况下，  要记录 同时把账户封掉
	i userid'<0,'ValidUser {
		;if user has changed since last logon attempt, then counter should be reset
		i PreviousUser'=username s LogonAttempts=0
		s LogonAttempts=LogonAttempts+1
		;s STATUS=$g(t("VALID_USR_PWD"),"Please enter a valid Username and Password"),password=""
		s STATUS="VALID_USR_PWD",password=""
		; Log invalid logons
		i userid="" s userid=##Class(web.SSUser).GetIdFromCodeOrDescription(username)
		d ##Class(web.SSInvalidUserLogin).Insert(userid,%session.Data("COMPUTER_NAME"))
		i NoOfAttempts > 0 {
			i (LogonAttempts>NoOfAttempts) {
				i userid {
	 				; RQG 12.06.03 L33973: save the date and time when the user is deactivated
 					;&sql(UPDATE SQLUser.SS_User (SSUSR_Active) VALUES ("N") WHERE SSUSR_ROWID=:userid)
					&sql(UPDATE SQLUser.SS_User SET SSUSR_MarkInactiveDate=:tdate,SSUSR_MarkInactiveTime=:ttime, SSUSR_Active='N'  WHERE SSUSR_ROWID=:userid)
				}
				;s STATUS="You have had "_LogonAttempts_" Invalid Logins. Please contact your System Administrator."
				;s STATUS=$g(t("INVALID_LOGON1"))_LogonAttempts_$g(t("INVALID_LOGON2"))
				s STATUS="INVALID_LOGON1"
			}
		}
		s %session.Data("LogonAttempts")=LogonAttempts
		s %session.Data("PreviousUser")=username
	}
	
	i ValidUser {
		s logonround=1
		
		s listflag=##Class(web.SSUserOtherLogonLoc).CheckUserOtherLocation(userid)
		//GR 30/7/02 log26776 need to allocate correct group settings if the group is changed at login time
		s %request.Data("PASSWORD",1)=$g(password)
		i $g(%request.Data("SSUSERGROUPDESC",1))'="" s grpid=##Class(web.SSGroup).GetIdFromCodeOrDescription(%request.Data("SSUSERGROUPDESC",1))
		
		;设置 用户基本的Session信息 zhaocz 2009-05-16
		d ##Class(web.SSUser).SetUserSessionData(userid,$g(grpid))
		;2011-12-16 AD 帐户信息 wanghc
		if $d(%request.Data("EmployeeNo",1)),%request.Data("EmployeeNo",1)'=""	d
		.s %session.Data("LOGON.ADUSERNAME")=%request.Data("EmployeeNo",1)
		.s %session.Data("LOGON.ADPASSWORD")=##class(%CSP.Page).Encrypt(%request.Data("PASSWORD",1)) 
		;
		//overwrite system config for application timeout
		d ##Class(epr.GroupSettings).SetGroupSessionTimeout($g(%session.Data("LOGON.GROUPID")))
		;
		
		&sql(SELECT SSUSR_ChangeLocation,SSUSR_DefaultDept_DR->CTLOC_Desc
		     INTO :changeloc,:loc
		     FROM SQLUser.SS_User
		     WHERE SSUSR_ROWID=:userid
		)
		i SQLCODE s changeloc="",loc=""
		i loc="" s blankDefaultLoc=1
		;S locid=##Class(web.CTLoc).GetIdFromCodeOrDescription(department)
		;KK 7/10/03 L:38430
		s locid=##Class(web.SSUserOtherLogonLoc).CheckLoginLocation(department,"1")
		if (locid="") {
			if department'="" S STATUS="INVALID_DEPT" s %request.Data("DEPARTMENT",1)="" ;S STATUS=$g(t("INVALID_DEPT"),"Please enter a valid Department")
			if department="" {
				i loc'="" s department=loc s %request.Data("DEPARTMENT",1)=department ;need to set %request for component
				i changeloc'="Y" s locIsDisabled=1
			}
		}
		; zhaocz 屏蔽
		s roundid=##Class(web.CTCareProv).GetIdFromCodeOrDescription(round)
		s roundid=""
		if (roundid="") {
			;if round'="" s STATUS=$g(t("ROUND_CAREPROV"),"Please enter a valid Round Care Provider"),roundok=0
			if round'="" s STATUS="ROUND_CAREPROV",roundok=0
		} else {
			s %session.Data("LOGON.ROUND")=roundid		
			s %session.Data("LOGON.ROUNDDESC")=round
		}
		;log 33697 GR
		;JW removed
		;s locatid=##Class(web.CTLoc).GetIdFromCodeOrDescription(department)
		;s %session.Data("LOGON.CTLOCID")=locatid
		;s hosp=""
		;s hosp=$p($g(^CTLOC(+locatid)),"^",22)
		;s ^zgav($zn)=locatid_"^"_department
		;i changeinlogonhosp="Y" s %request.Data("changeinlogonhosp",1)=hosp
		;
		
		; go straight in if we can
		i (overrideauth) s locid=##Class(web.CTLoc).GetIdFromCodeOrDescription(department)
		;
		
		if roundok,locid'="" {
			
  			s wardid=$O(^PAWARD(0,"WARD_LocationDR",locid,""))
  			if wardid'="" {
  				s ctcpt=$p(^SSU("SSUSR",userid),"^",14)
  				i $g(ctcpt)'="" {
	  				s typid=$p(^CTPCP(ctcpt,1),"^",4)
  					i $g(typid)'="" s typdes=$p(^CT("CPT",typid),"^",4)
  					i ($g(typdes)="NURSE") s %session.Data("LOGON.WARDID")=wardid
  				}
			}
						
			s %session.Data("LOGON.CTLOCID")=locid
			s %session.Data("LOGON.CTLOCDESC")=department
			s hospid=$p($g(^CTLOC(+locid)),"^",22),%session.Data("LOGON.HOSPID")=hospid
			s hospdesc=$p($g(^CT("HOSP",+hospid)),"^",2),%session.Data("LOGON.HOSPDESC")=hospdesc
			s trustid=##Class(web.CTHospital).getTrustId(hospid),%session.Data("LOGON.TRUSTID")=trustid
			s trustdesc=$p($g(^PAC("TRUST",+trustid)),"^",2),%session.Data("LOGON.TRUSTDESC")=trustdesc
			
			//jump to emr screen/floor plan
			i ##Class(epr.GroupSettings).GetStartPage($g(%session.Data("LOGON.GROUPID")))'="" s %response.ServerSideRedirect="epr.frames.csp"
			
			i %response.ServerSideRedirect="" s %response.ServerSideRedirect="websys.frames.csp"
			
			// if this is a successful re-logon then do 重新登录 需要刷新界面
			i $g(%request.Data("RELOGON",1))'="" s %response.ServerSideRedirect="logonrefresh.csp"
			
		}
		// does user need to change password?
		
		s forcePasswordChange=##Class(web.SSUser).IsRequiredToChangePassword(userid,$g(%session.Data("LOGON.GROUPID")))
		;i forcePasswordChange s %response.ServerSideRedirect="",STATUS=$g(t("PWD_EXPIRED"),"Password Expired, Please Change your Password")
		i forcePasswordChange s %response.ServerSideRedirect="",STATUS="PWD_EXPIRED"
		
		if locid'="",'forcePasswordChange s %session.Data("LOGON.SSUSERLOGINID")=##Class(web.SSUserLogin).Insert(userid,locid)
		;
		; Kill Session Data for Logon Attempts
		s %session.Data("LogonAttempts")=""
	}
 }
 ;fetch translations at end to make sure %session("LOGON.LANGID") has been set correctly
 d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM,SSUserLogon")
 ;m ^TMPComponentMessage=t
 set %session.Data("XMONTHSSHORT")=$g(t("XMONTHSSHORT"),"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec")
 i STATUS'="" d
 . i STATUS'="INVALID_LOGON1" s STATUS=$g(t(STATUS))
 . i STATUS="INVALID_LOGON1" s STATUS=$g(t("INVALID_LOGON1"))_LogonAttempts_$g(t("INVALID_LOGON2"))
 s welcometitle=$g(t("WELCOME_TITLE"),"欢迎 ")
 ; RQG 15.01.03 Log31643
 //SP Hack for DtHealth Release
 //s medtrakver=$g(t("MEDTRK_VERSION"),"DtHealth Version W650")
 s medtrakver="DtHealth Version V7.0"
 s copyright=$g(t("COPYRIGHT"),"All Material Copyright ")
 //SP Hack for DtHealth Release
 //s copyrighttitle=$g(t("COPYRIGHT_TITLE"),"2001-2004 TrakHealth Pty Limited. ALL RIGHTS RESERVED.")
 s copyrighttitle="2001-2009 TrakHealth Pty. Limited. ALL RIGHTS RESERVED."
 s traktooltip1=$g(t("TRAK_CAPTION"),"TrakHealth: Keep everything in your hospital on Trak")
 //SP Hack for DtHealth Release
	//s traktooltip2=$g(t("MEDTRK_FROM_TRAK"),"DtHealth from DHCC")
 s traktooltip2="DtHealth from DHCC"
 ;
 if (%response.ServerSideRedirect'="")
 {
	 ;s %session.Username=username
	 ;d %session.%Save()
	 ;s ^TMPmystatus=mystatus_%session.SessionId
 }
 
	i %response.ServerSideRedirect'="" quit 0
 	
	q mystatus
Err
	s ^Temp("Upgrade","SessionLogon.Err",$j)=$ze
	quit
]]></Implementation>
</Method>

<Method name="LogonFromMedTrak">
<ClassMethod>1</ClassMethod>
<FormalSpec>rowid:%Library.String="",namespace:%Library.String=""</FormalSpec>
</Method>

<Method name="InitialiseSession">
<Description>
zhaocz 2011-05-27 add</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
	set LogonAttempts=$g(%session.Data("LogonAttempts"))
	set PreviousUser=$g(%session.Data("PreviousUser")) 
	set CAContainerName = $g(%session.Data("ContainerName"))
	Set CASUSERNAME =  $g(%session.Data("CASUSERNAME"))
	kill %session.Data
	set %session.Data("LogonAttempts")=LogonAttempts
	set %session.Data("PreviousUser")=PreviousUser
	//Initialise all the core session data
	set %session.Data("LOGON.CTLOCID")=""
	set %session.Data("LOGON.SITECODE")=""
	set %session.Data("LOGON.USERID")=""
	set %session.Data("LOGON.USERCODE")=""
	set %session.Data("LOGON.USERNAME")=""
	set %session.Data("LOGON.GROUPID")=""
	set %session.Data("LOGON.GROUPDESC")=""
	set %session.Data("LOGON.LANGID")=""
	set %session.Data("LOGON.GROUPMENUS")=""
	set %session.Data("LOGON.LAYOUTMANAGER")=""
	set %session.Data("LOGON.ALLOWLAYOUTMANAGER")=""
	set %session.Data("LOGON.ALLOWCOLUMNMANAGER")=""
	set %session.Data("LOGON.PPMCAPTURE")=""
	set %session.Data("LOGON.PPMDISPLAY")=""
	set %session.Data("LOGON.ROUND")=""
	set %session.Data("LOGON.ROUNDDESC")=""
	set %session.Data("LOGON.HOSPID")=""
	set %session.Data("LOGON.HOSPDESC")=""
	set %session.Data("LOGON.TRUSTID")=""
	set %session.Data("LOGON.TRUSTDESC")=""
	set %session.Data("LOGON.SSUSERLOGINID")=""
	set %session.Data("TITLE")=""
	set %session.Data("LOGON.TIMEOUT")="900"
	; Do this because CSP only sends CGI with POST requests, but we need to log eveything in ComponentAudit
	set %session.Data("REMOTE_ADDR")=%request.GetCgiEnv("REMOTE_ADDR")
	
	;查找计算机名称导致登陆界面慢,暂时用IP替换  zhouzq
	;set %session.Data("COMPUTER_NAME")=##Class(websys.Conversions).GetComputerName(%session.Data("REMOTE_ADDR"))
	set %session.Data("COMPUTER_NAME")=%request.GetCgiEnv("REMOTE_ADDR")
	
	; Used to detemine if we are connecting to the code table server
	set %session.Data("SERVER_NAME")=%request.GetCgiEnv("SERVER_NAME")
	
	;P8 新增Session
	s %session.Data("LOGON.REGION")=""
	s %session.Data("LICENSE.TC")=""
	s %session.Data("SYS.LANGID")=""
	s %session.Data("SYS.TIMEOUT")=""
	
	;2011-12-16 AD帐户 OOS
	s %session.Data("LOGON.ADUSERNAME")=""
	s %session.Data("LOGON.ADPASSWORD")=""
	
	;2013/05/17 CA
	set %session.Data("ContainerName")  = CAContainerName
	;DHCC V7 新增 In 协和 
	;病区 ID 和描述
	;s %session.Data("LOGON.WARDID")=""
	;s %session.Data("LOGON.WARDDESC")=""
	;cas
	set %session.Data("CASUSERNAME") = CASUSERNAME
]]></Implementation>
</Method>

<Method name="IsCaLogon">
<Description>
是CA登录
@param: {CT_Loc.CTLoc_Desc}|{CT_Loc.CTLoc_RowID} CTLocDesc</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>CTLocDesc</FormalSpec>
<Implementation><![CDATA[
	q:CTLocDesc="" 0
	if (+CTLocDesc>0){
		s CTLocID = CTLocDesc
	}else{
		s CTLocID = ##class(web.CTLoc).GetIdFromCodeDescriptionHosp(CTLocDesc)
	}
	s rtn=0
	i ##class(%Dictionary.CompiledClass).%ExistsId("CA.DigitalSignatureService"){
		s rtn = ##class(CA.DigitalSignatureService).GetCAServiceStatus(CTLocID)
	}
	q rtn
]]></Implementation>
</Method>

<Method name="LoginAfter">
<ClassMethod>1</ClassMethod>
<FormalSpec>ContainerName</FormalSpec>
<Implementation><![CDATA[
	s %session.Data("ContainerName") = ContainerName
	q ""
]]></Implementation>
</Method>

<Method name="CASLogon">
<Description>
CAS单点登录的方法,在session未中断的情况下,第一次进入选择科室界面,第二次直接进入系统</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	;判断lisence
	s lic=1
	i ((+$g(^TMPSession("Session",+$h,"COUNT"))>2)&&('$d(^TMPSession("Session",+$h,%session.SessionId)))){
		s lic=0
	}
	;m ^Temp("wanghc","req",$i(^Temp("wanghc","req")))=%request.Data
	;m ^Temp("wanghc","ses",$i(^Temp("wanghc","ses")))=%session.Data
	;m ^Temp("wanghc","reqcgi",$i(^Temp("wanghc","reqcgi")))=%request.CgiEnvs
	s mystatus=1
	s STATUS=""
	s $zt="CASLogonErr"
	s LICENSE="Dt License to "
	s welcometitle="欢迎"

	 s config=##Class(websys.Configuration).%OpenId(1,0)
	 i config {
	 	s %session.Data("LOGON.SITECODE")=config.SiteCode
	 	s %session.Data("LOGON.LAYOUTMANAGER")=config.LayoutManager
	 	s (%session.Data("LOGON.TIMEOUT"),%session.AppTimeout)=$s(+config.TimeOut:config.TimeOut*60,1:900) ; convert from mins to secs
	 	s %session.Data("LOGON.PPMDISPLAY")=config.PerformanceStatisticsDisplay
	 	s %session.Data("LOGON.PPMCAPTURE")=config.PerformanceStatisticsCapture
		s %session.Data("LOGON.LANGID")=config.LanguageApp
		if config.LanguageApp="" s %session.Data("LOGON.LANGID")=$o(^SS("LAN",0))
	 	s overrideauth=config.OverrideAuthentication
	 	s casLoginlURL=config.CASLoginlURL
	 	s casValidateURL=config.CASValidateURL
	 	d config.%Close()
	 }
	
	;Set casLoginlURL="http://172.21.21.150:8080/cas/login"    //CAS登录页面Url
	;Set casValidateURL="http://172.21.21.150:8080/cas/proxyValidate"
	Set appURL= %request.CgiEnvs("CACHE_URL") 		;"http://127.0.0.1/dthealth/web/csp/dhc.logon.csp?caslogin=1"
	do ##class(%Net.URLParser).Parse(casValidateURL,.t)
	Set casValidateServer = $g(t("host"))			;$p($p(casValidateURL,":",2),"//",2)
	Set casValidatePort = $g(t("port"),80)			;+$p(casValidateURL,":",3)
	Set casValidateLocation = $g(t("path")) 	;"/"_$p(casValidateURL,"/",4,$l(casValidateURL,"/"))
	Set serviceParamName = "service"
	Set ticketParamName = "ticket"
	Set redirect = $g(%request.Data("directpage",1))	;登录成功后跳转的界面
	if redirect'="" {
		k t
		set redirect = ##class(%CSP.Page).UnescapeURL(redirect)
		do ##class(%Net.URLParser).Parse(redirect,.t)
		Set redirectPath = t("path")
		set len = $l(redirectPath,"/")
		if len>1{
			Set redirectPath = $p(redirectPath,"/",len)
		}
		if redirectPath="dhc.logon.csp" Set redirectPath=""
		Set redirect=redirectPath_"?"_t("query")
	}
	set UserName = $g(%session.Data("CASUSERNAME"))
	set reqTicket=%request.Get(ticketParamName)
	
	//如果session中存在登录科室，这可以直接赋值,
	if (UserName'=""),$g(%session.Data("LOGON.CTLOCDESC"))'="" {
		set %request.Data("DEPARTMENT",1)=$g(%session.Data("LOGON.CTLOCDESC"))
		set %request.Data("SSUSERGROUPDESC",1)=$g(%session.Data("LOGON.GROUPDESC"))
	}
	
	if (UserName="") & (reqTicket="") {
		Set loginURL=casLoginlURL_"?"_serviceParamName_"="_##class(%CSP.Page).EscapeURL(appURL)
		set %response.Redirect=loginURL
	}elseif (UserName'="")	{
		Set %request.Data("USERNAME",1) = UserName
		if redirect'="" Set %response.ServerSideRedirect=redirect //quit 0		
	}elseif (reqTicket'=""){
		Set httprequest=##class(%Net.HttpRequest).%New()		
		Set httprequest.Server=casValidateServer
		Set httprequest.Port=casValidatePort
		do httprequest.SetParam(ticketParamName,reqTicket)
		Set appURL = $p(appURL,"&ticket",1)
		do httprequest.SetParam(serviceParamName,appURL)
		Set flg=httprequest.Post(casValidateLocation)
		If $system.Status.IsError(flg) Do $system.OBJ.DisplayError(flg)
		Set Data=httprequest.HttpResponse.Data
		Set strData=""
		While 'Data.AtEnd {
			Set strData=strData_Data.Read(1000)
		}
		Set UserName = ##class(web.DHCXmlService).GetValueByQName(strData,"cas:authenticationSuccess->cas:user")
		if (UserName'=""){
			Set %session.Data("CASUSERNAME")=UserName
			Set %request.Data("USERNAME",1) = UserName			
		}else{
			Set %session.Data("CASUSERNAME")=""
			Set failureMsg = ##class(web.DHCXmlService).GetValueByQName(strData,"cas:authenticationFailure")
			Set STATUS=failureMsg
			Quit mystatus
		}
	}	
	
	s forcePasswordChange=0
	s readonly=""
	s locIsDisabled=1
	
	s locIsDisabled=0
	s ValidUser=1
	s logonround=1
	
	d ..InitialiseSession()

	; Set items for Logon.
	s LogonAttempts=+$g(%session.Data("LogonAttempts"))
	s PreviousUser=$g(%session.Data("PreviousUser")) 
	s STATUS=""
	s listflag=0
	s ValidUser=0
	s logonround=0
	s roundok=1
	s overrideauth=0,readonly=""
	s tdate=+$h
	s ttime=+$p($h,",",2)
 	
	 s config=##Class(websys.Configuration).%OpenId(1,0)
	 i config {
	 	s %session.Data("LOGON.SITECODE")=config.SiteCode
	 	s %session.Data("LOGON.LAYOUTMANAGER")=config.LayoutManager
	 	s (%session.Data("LOGON.TIMEOUT"),%session.AppTimeout)=$s(+config.TimeOut:config.TimeOut*60,1:900) ; convert from mins to secs
	 	s %session.Data("LOGON.PPMDISPLAY")=config.PerformanceStatisticsDisplay
	 	s %session.Data("LOGON.PPMCAPTURE")=config.PerformanceStatisticsCapture
		s %session.Data("LOGON.LANGID")=config.LanguageApp
		if config.LanguageApp="" s %session.Data("LOGON.LANGID")=$o(^SS("LAN",0))
	 	s overrideauth=config.OverrideAuthentication
	 	d config.%Close()
	 	s %session.Data("TITLE")=$p($g(^CF("SM",1)),"^",5)
		s NoOfAttempts=$p($g(^CF("SM",1)),"^",46)
		s %session.Data("LICSITE")=$p($g(^CF("SM",1)),"^",43)
	}
	i $g(%request.Data("RELOGON",1))'="" s STATUS="SESSION_EXPIRED"
	s username=$g(%request.Data("USERNAME",1))
	s department = $g(%request.Data("DEPARTMENT",1))
	s password="*****" 
	s round=""
	s readonly="READONLY"
	
	 //Remove any old error messages
	 d ##Class(websys.Message).%DeleteId(%session.SessionId)
	 //Remove any (and all) existing session data
	 //clear records against this computer
	 ;d ##Class(websys.Lock).LockClearComputer($zu(67,15,$j))
	 s Computer = %session.Data("REMOTE_ADDR")
	 d ##Class(websys.Lock).LockClearComputer(Computer)
	 
	 s (locIsDisabled,forcePasswordChange,blankDefaultLoc)=0	;TN: added for refresh purposes
	 if $g(username)'="",$g(password)'="" {
		set userid=$o(^SSU("SSUSR",0,"SSUSR_Initials",$$ALPHAUP^SSUTIL4(username),""))
		i userid>0 s ValidUser=1
		i userid<0 {
			s STATUS="INACTIVE_LOGON"
		}

		;; zhaocz 同一个用户 多次登陆(3次)而 密码不对的情况下，  要记录 同时把账户封掉
		i userid'<0,'ValidUser {
			;if user has changed since last logon attempt, then counter should be reset
			i PreviousUser'=username s LogonAttempts=0
			s LogonAttempts=LogonAttempts+1
			s STATUS="VALID_USR_PWD",password=""
			; Log invalid logons
			i userid="" s userid=##Class(web.SSUser).GetIdFromCodeOrDescription(username)
			d ##Class(web.SSInvalidUserLogin).Insert(userid,%session.Data("COMPUTER_NAME"))
			i NoOfAttempts > 0 {
				i (LogonAttempts>NoOfAttempts) {
					i userid {
						&sql(UPDATE SQLUser.SS_User SET SSUSR_MarkInactiveDate=:tdate,SSUSR_MarkInactiveTime=:ttime, SSUSR_Active='N'  WHERE SSUSR_ROWID=:userid)
					}
					s STATUS="INVALID_LOGON1"
				}
			}
			s %session.Data("LogonAttempts")=LogonAttempts
			s %session.Data("PreviousUser")=username
		}

		i ValidUser {
			s logonround=1
			;wanghc CAS登录-默认科室
			/*s DefaultDepartment = ""
			s ObjUser = ##class(User.SSUser).%OpenId(userid,0)
			if $IsObject(ObjUser){
				if $IsObject(ObjUser.SSUSRDefaultDeptDR){	
					s DefaultDepartment = ObjUser.SSUSRDefaultDeptDR.CTLOCDesc
					s department = $g(%request.Data("DEPARTMENT",1),DefaultDepartment)
					;s %request.Data("SSUSERGROUPDESC",1)="Inpatient Doctor"
				}else{
					set STATUS = username+"Has Not Default Department"
				}
			}*/
			s listflag=##Class(web.SSUserOtherLogonLoc).CheckUserOtherLocation(userid)
			//GR 30/7/02 log26776 need to allocate correct group settings if the group is changed at login time
			s %request.Data("PASSWORD",1)=$g(password)
			i $g(%request.Data("SSUSERGROUPDESC",1))'="" s grpid=##Class(web.SSGroup).GetIdFromCodeOrDescription(%request.Data("SSUSERGROUPDESC",1))
			;设置 用户基本的Session信息 zhaocz 2009-05-16
			d ##Class(web.SSUser).SetUserSessionData(userid,$g(grpid))
			//overwrite system config for application timeout
			d ##Class(epr.GroupSettings).SetGroupSessionTimeout($g(%session.Data("LOGON.GROUPID")))
			
			//如果传入的登陆科室有误或者为空,则找在用户默认的登陆科室
			&sql(SELECT SSUSR_ChangeLocation,SSUSR_DefaultDept_DR->CTLOC_Desc
			     INTO :changeloc,:loc
			     FROM SQLUser.SS_User
			     WHERE SSUSR_ROWID=:userid
			)
			i SQLCODE s changeloc="",loc=""
			i loc="" s blankDefaultLoc=1
			;KK 7/10/03 L:38430,
			s locid=##Class(web.SSUserOtherLogonLoc).CheckLoginLocation(department,"1")
			if (locid="") {
				if department'="" S STATUS="INVALID_DEPT" s %request.Data("DEPARTMENT",1)="" ;S STATUS=$g(t("INVALID_DEPT"),"Please enter a valid Department")
				if department="" {
					i loc'="" s department=loc s %request.Data("DEPARTMENT",1)=department ;need to set %request for component
					i changeloc'="Y" s locIsDisabled=1
				}
			}

			; zhaocz 屏蔽
			s roundid=##Class(web.CTCareProv).GetIdFromCodeOrDescription(round)
			s roundid=""
			if (roundid="") {
				;if round'="" s STATUS=$g(t("ROUND_CAREPROV"),"Please enter a valid Round Care Provider"),roundok=0
				if round'="" s STATUS="ROUND_CAREPROV",roundok=0
			} else {
				s %session.Data("LOGON.ROUND")=roundid		
				s %session.Data("LOGON.ROUNDDESC")=round
			}
		
			; go straight in if we can
			i (overrideauth) s locid=##Class(web.CTLoc).GetIdFromCodeOrDescription(department)
			s ^zhou1("ses",4)=locid_","_overrideauth
			;
			if roundok,locid'="" {
	  			s wardid=$O(^PAWARD(0,"WARD_LocationDR",locid,""))
	  			if wardid'="" {
	  				s ctcpt=$p(^SSU("SSUSR",userid),"^",14)
	  				i $g(ctcpt)'="" {
		  				s typid=$p(^CTPCP(ctcpt,1),"^",4)
	  					i $g(typid)'="" s typdes=$p(^CT("CPT",typid),"^",4)
	  					i ($g(typdes)="NURSE") s %session.Data("LOGON.WARDID")=wardid
	  				}
				}
				s %session.Data("LOGON.CTLOCID")=locid
				s ^zhou1("ses")=locid
				s %session.Data("LOGON.CTLOCDESC")=department
				s hospid=$p($g(^CTLOC(+locid)),"^",22),%session.Data("LOGON.HOSPID")=hospid
				s hospdesc=$p($g(^CT("HOSP",+hospid)),"^",2),%session.Data("LOGON.HOSPDESC")=hospdesc
				s trustid=##Class(web.CTHospital).getTrustId(hospid),%session.Data("LOGON.TRUSTID")=trustid
				s trustdesc=$p($g(^PAC("TRUST",+trustid)),"^",2),%session.Data("LOGON.TRUSTDESC")=trustdesc
				//jump to emr screen/floor plan
				i ##Class(epr.GroupSettings).GetStartPage($g(%session.Data("LOGON.GROUPID")))'="" s %response.ServerSideRedirect="epr.frames.csp"
				i %response.ServerSideRedirect="" s %response.ServerSideRedirect="websys.frames.csp"
				i redirect'="" s %response.ServerSideRedirect=redirect
				// if this is a successful re-logon then do 重新登录 需要刷新界面
				i $g(%request.Data("RELOGON",1))'="" s %response.ServerSideRedirect="logonrefresh.csp"
			}
			// does user need to change password?
			s forcePasswordChange=##Class(web.SSUser).IsRequiredToChangePassword(userid,$g(%session.Data("LOGON.GROUPID")))
			i forcePasswordChange s %response.ServerSideRedirect="",STATUS="PWD_EXPIRED"
			if locid'="",'forcePasswordChange s %session.Data("LOGON.SSUSERLOGINID")=##Class(web.SSUserLogin).Insert(userid,locid)
			;
			; Kill Session Data for Logon Attempts
			s %session.Data("LogonAttempts")=""
		}
	 }else{
		s STATUS="UserName Null"
	}
	 ;fetch translations at end to make sure %session("LOGON.LANGID") has been set correctly
	 d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM,SSUserLogon")
	 set %session.Data("XMONTHSSHORT")=$g(t("XMONTHSSHORT"),"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec")
	 i STATUS'="" d
	 . i STATUS'="INVALID_LOGON1" s STATUS=$g(t(STATUS))
	 . i STATUS="INVALID_LOGON1" s STATUS=$g(t("INVALID_LOGON1"))_LogonAttempts_$g(t("INVALID_LOGON2"))
	 s welcometitle=$g(t("WELCOME_TITLE"),"欢迎 ")
	 s medtrakver="DtHealth Version V7.0"
	 s copyright=$g(t("COPYRIGHT"),"All Material Copyright ")
	 s copyrighttitle="2001-2009 TrakHealth Pty. Limited. ALL RIGHTS RESERVED."
	 s traktooltip1=$g(t("TRAK_CAPTION"),"TrakHealth: Keep everything in your hospital on Trak")
	 s traktooltip2="DtHealth from DHCC"
	 ;m ^Temp("wanghc","his->ses",$i(^Temp("wanghc","ses")))=%session.Data
	i %response.ServerSideRedirect'="" quit 0
	q mystatus
CASLogonErr
	s ^Temp("Upgrade","CASSessionLogon.Err",$j)=$ze
	s STATUS = $ze
	s $ze=""
	quit 1
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^websys.SessionLogonD</DataLocation>
<DefaultData>SessionLogonDefaultData</DefaultData>
<IdLocation>^websys.SessionLogonD</IdLocation>
<IndexLocation>^websys.SessionLogonI</IndexLocation>
<StreamLocation>^websys.SessionLogonS</StreamLocation>
<Data name="SessionLogonDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>ExpiryDate</Value>
</Value>
<Value name="3">
<Value>LicenseKey</Value>
</Value>
<Value name="4">
<Value>LicensedTrakCareUsers</Value>
</Value>
<Value name="5">
<Value>SiteCode</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
